```
import math
velocity=700
x_array0=[0]
y_array0=[0]
z_array0=[0]
angle_z0=45
angle_x0=0
spin_velocity=2*math.pi/(3600*24)
velocity_x=velocity*math.cos(math.radians(angle_z0))*math.cos(math.radians(angle_x0))
velocity_y=velocity*math.cos(math.radians(angle_z0))*math.sin(math.radians(angle_x0))
velocity_z=velocity*math.sin(math.radians(angle_z0))
det_t=0.2
z=0
x=0
y=0
t=0
friction_0=4*10**(-5)
while z>=0:
    t=t+det_t
    x=x+velocity_x*det_t
    y=y+velocity_y*det_t
    z=z+velocity_z*det_t
    x_array0.append(x)
    y_array0.append(y)
    z_array0.append(z)
    friction=friction_0*((1-y*6.5*10**(-3)/300)**2.5)
    velocity_x=velocity_x+(2*spin_velocity*velocity_y*math.sin(math.radians(30))-friction*velocity*velocity_x)*det_t
    velocity_y=velocity_y+(-2*spin_velocity*velocity_z*math.cos(math.radians(30))-2*spin_velocity*velocity_x*math.sin(math.radians(30))-friction*velocity*velocity_y)*det_t
    velocity_z=velocity_z+(2*spin_velocity*velocity_y*math.cos(math.radians(30))-9.8-friction*velocity*velocity_z)*det_t
    velocity=(velocity_x**2+velocity_y**2+velocity_z**2)**(1/2)
else:
    lanch_x=(-z_array0[-1]/(z_array0[-2]-z_array0[-1]))*(x_array0[-2]-x_array0[-1])+x_array0[-1]
    lanch_y=(-z_array0[-1]/(z_array0[-2]-z_array0[-1]))*(y_array0[-2]-y_array0[-1])+y_array0[-1]
    print(t)
    print(lanch_x,lanch_y)
velocity=700
x_array1=[0]
y_array1=[0]
z_array1=[0]
angle_z1=30
angle_x1=0
spin_velocity=2*math.pi/(3600*24)
velocity_x=velocity*math.cos(math.radians(angle_z1))*math.cos(math.radians(angle_x1))
velocity_y=velocity*math.cos(math.radians(angle_z1))*math.sin(math.radians(angle_x1))
velocity_z=velocity*math.sin(math.radians(angle_z1))
det_t=0.2
z=0
x=0
y=0
t=0
friction_0=4*10**(-5)
while z>=0:
    t=t+det_t
    x=x+velocity_x*det_t
    y=y+velocity_y*det_t
    z=z+velocity_z*det_t
    x_array1.append(x)
    y_array1.append(y)
    z_array1.append(z)
    friction=friction_0*((1-y*6.5*10**(-3)/300)**2.5)
    velocity_x=velocity_x+(2*spin_velocity*velocity_y*math.sin(math.radians(30))-friction*velocity*velocity_x)*det_t
    velocity_y=velocity_y+(-2*spin_velocity*velocity_z*math.cos(math.radians(30))-2*spin_velocity*velocity_x*math.sin(math.radians(30))-friction*velocity*velocity_y)*det_t
    velocity_z=velocity_z+(2*spin_velocity*velocity_y*math.cos(math.radians(30))-9.8-friction*velocity*velocity_z)*det_t
    velocity=(velocity_x**2+velocity_y**2+velocity_z**2)**(1/2)
else:
    lanch_x=(-z_array1[-1]/(z_array1[-2]-z_array1[-1]))*(x_array1[-2]-x_array1[-1])+x_array1[-1]
    lanch_y=(-z_array1[-1]/(z_array1[-2]-z_array1[-1]))*(y_array1[-2]-y_array1[-1])+y_array1[-1]
    print(t)
    print(lanch_x,lanch_y)
velocity=700
x_array2=[0]
y_array2=[0]
z_array2=[0]
angle_z2=50
angle_x2=0
spin_velocity=2*math.pi/(3600*24)
velocity_x=velocity*math.cos(math.radians(angle_z2))*math.cos(math.radians(angle_x2))
velocity_y=velocity*math.cos(math.radians(angle_z2))*math.sin(math.radians(angle_x2))
velocity_z=velocity*math.sin(math.radians(angle_z2))
det_t=0.2
z=0
x=0
y=0
t=0
friction_0=4*10**(-5)
while z>=0:
    t=t+det_t
    x=x+velocity_x*det_t
    y=y+velocity_y*det_t
    z=z+velocity_z*det_t
    x_array2.append(x)
    y_array2.append(y)
    z_array2.append(z)
    friction=friction_0*((1-y*6.5*10**(-3)/300)**2.5)
    velocity_x=velocity_x+(2*spin_velocity*velocity_y*math.sin(math.radians(30))-friction*velocity*velocity_x)*det_t
    velocity_y=velocity_y+(-2*spin_velocity*velocity_z*math.cos(math.radians(30))-2*spin_velocity*velocity_x*math.sin(math.radians(30))-friction*velocity*velocity_y)*det_t
    velocity_z=velocity_z+(2*spin_velocity*velocity_y*math.cos(math.radians(30))-9.8-friction*velocity*velocity_z)*det_t
    velocity=(velocity_x**2+velocity_y**2+velocity_z**2)**(1/2)
else:
    lanch_x=(-z_array2[-1]/(z_array2[-2]-z_array2[-1]))*(x_array2[-2]-x_array2[-1])+x_array2[-1]
    lanch_y=(-z_array2[-1]/(z_array2[-2]-z_array2[-1]))*(y_array2[-2]-y_array2[-1])+y_array2[-1]
    print(t)
    print(lanch_x,lanch_y)
velocity=700
x_array3=[0]
y_array3=[0]
z_array3=[0]
angle_z3=60
angle_x3=0
spin_velocity=2*math.pi/(3600*24)
velocity_x=velocity*math.cos(math.radians(angle_z3))*math.cos(math.radians(angle_x3))
velocity_y=velocity*math.cos(math.radians(angle_z3))*math.sin(math.radians(angle_x3))
velocity_z=velocity*math.sin(math.radians(angle_z3))
det_t=0.2
z=0
x=0
y=0
t=0
friction_0=4*10**(-5)
while z>=0:
    t=t+det_t
    x=x+velocity_x*det_t
    y=y+velocity_y*det_t
    z=z+velocity_z*det_t
    x_array3.append(x)
    y_array3.append(y)
    z_array3.append(z)
    friction=friction_0*((1-y*6.5*10**(-3)/300)**2.5)
    velocity_x=velocity_x+(2*spin_velocity*velocity_y*math.sin(math.radians(30))-friction*velocity*velocity_x)*det_t
    velocity_y=velocity_y+(-2*spin_velocity*velocity_z*math.cos(math.radians(30))-2*spin_velocity*velocity_x*math.sin(math.radians(30))-friction*velocity*velocity_y)*det_t
    velocity_z=velocity_z+(2*spin_velocity*velocity_y*math.cos(math.radians(30))-9.8-friction*velocity*velocity_z)*det_t
    velocity=(velocity_x**2+velocity_y**2+velocity_z**2)**(1/2)
else:
    lanch_x=(-z_array3[-1]/(z_array3[-2]-z_array3[-1]))*(x_array3[-2]-x_array3[-1])+x_array3[-1]
    lanch_y=(-z_array3[-1]/(z_array3[-2]-z_array3[-1]))*(y_array3[-2]-y_array3[-1])+y_array3[-1]
    print(t)
    print(lanch_x,lanch_y)
velocity=700
x_array4=[0]
y_array4=[0]
z_array4=[0]
angle_z4=40
angle_x4=0
spin_velocity=2*math.pi/(3600*24)
velocity_x=velocity*math.cos(math.radians(angle_z4))*math.cos(math.radians(angle_x4))
velocity_y=velocity*math.cos(math.radians(angle_z4))*math.sin(math.radians(angle_x4))
velocity_z=velocity*math.sin(math.radians(angle_z4))
det_t=0.2
z=0
x=0
y=0
t=0
friction_0=4*10**(-5)
while z>=0:
    t=t+det_t
    x=x+velocity_x*det_t
    y=y+velocity_y*det_t
    z=z+velocity_z*det_t
    x_array4.append(x)
    y_array4.append(y)
    z_array4.append(z)
    friction=friction_0*((1-y*6.5*10**(-3)/300)**2.5)
    velocity_x=velocity_x+(2*spin_velocity*velocity_y*math.sin(math.radians(30))-friction*velocity*velocity_x)*det_t
    velocity_y=velocity_y+(-2*spin_velocity*velocity_z*math.cos(math.radians(30))-2*spin_velocity*velocity_x*math.sin(math.radians(30))-friction*velocity*velocity_y)*det_t
    velocity_z=velocity_z+(2*spin_velocity*velocity_y*math.cos(math.radians(30))-9.8-friction*velocity*velocity_z)*det_t
    velocity=(velocity_x**2+velocity_y**2+velocity_z**2)**(1/2)
else:
    lanch_x=(-z_array4[-1]/(z_array4[-2]-z_array4[-1]))*(x_array4[-2]-x_array4[-1])+x_array4[-1]
    lanch_y=(-z_array4[-1]/(z_array4[-2]-z_array4[-1]))*(y_array4[-2]-y_array4[-1])+y_array4[-1]
    print(t)
    print(lanch_x,lanch_y)
    import mpl_toolkits.mplot3d
    import numpy as np  
    import matplotlib.pyplot as plt  
    ax=plt.subplot(111,projection='3d')  
    ax.plot(x_array0,y_array0,z_array0,label='45Â°')
    ax.plot(x_array1,y_array1,z_array1,label='30')
    ax.plot(x_array2,y_array2,z_array2,label='50')
    ax.plot(x_array3,y_array3,z_array3,label='60')
    ax.plot(x_array4,y_array4,z_array4,label='40')
    ax.legend()
    ax.set_xlabel("X(m)")  
    ax.set_ylabel("Y(m)")  
    ax.set_zlabel("Z(m)")  
    plt.show()  
```
```
import math
velocity=700
x_array0=[0]
y_array0=[0]
z_array0=[0]
angle_z0=45
angle_x0=0
spin_velocity=2*math.pi/(3600*24)
velocity_x=velocity*math.cos(math.radians(angle_z0))*math.cos(math.radians(angle_x0))
velocity_y=velocity*math.cos(math.radians(angle_z0))*math.sin(math.radians(angle_x0))
velocity_z=velocity*math.sin(math.radians(angle_z0))
det_t=0.2
z=0
x=0
y=0
t=0
friction_0=4*10**(-5)
while z>=0:
    t=t+det_t
    x=x+velocity_x*det_t
    y=y+velocity_y*det_t
    z=z+velocity_z*det_t
    x_array0.append(x)
    y_array0.append(y)
    z_array0.append(z)
    friction=friction_0*((1-y*6.5*10**(-3)/300)**2.5)
    velocity_x=velocity_x+(2*spin_velocity*velocity_y*math.sin(math.radians(30))-friction*velocity*velocity_x)*det_t
    velocity_y=velocity_y+(-2*spin_velocity*velocity_z*math.cos(math.radians(30))-2*spin_velocity*velocity_x*math.sin(math.radians(30))-friction*velocity*velocity_y)*det_t
    velocity_z=velocity_z+(2*spin_velocity*velocity_y*math.cos(math.radians(30))-9.8-friction*velocity*velocity_z)*det_t
    velocity=(velocity_x**2+velocity_y**2+velocity_z**2)**(1/2)
else:
    lanch_x=(-z_array0[-1]/(z_array0[-2]-z_array0[-1]))*(x_array0[-2]-x_array0[-1])+x_array0[-1]
    lanch_y=(-z_array0[-1]/(z_array0[-2]-z_array0[-1]))*(y_array0[-2]-y_array0[-1])+y_array0[-1]
    print(t)
    print(lanch_x,lanch_y)
velocity=700
x_array1=[0]
y_array1=[0]
z_array1=[0]
angle_z1=45
angle_x1=10
spin_velocity=2*math.pi/(3600*24)
velocity_x=velocity*math.cos(math.radians(angle_z1))*math.cos(math.radians(angle_x1))
velocity_y=velocity*math.cos(math.radians(angle_z1))*math.sin(math.radians(angle_x1))
velocity_z=velocity*math.sin(math.radians(angle_z1))
det_t=0.2
z=0
x=0
y=0
t=0
friction_0=4*10**(-5)
while z>=0:
    t=t+det_t
    x=x+velocity_x*det_t
    y=y+velocity_y*det_t
    z=z+velocity_z*det_t
    x_array1.append(x)
    y_array1.append(y)
    z_array1.append(z)
    friction=friction_0*((1-y*6.5*10**(-3)/300)**2.5)
    velocity_x=velocity_x+(2*spin_velocity*velocity_y*math.sin(math.radians(30))-friction*velocity*velocity_x)*det_t
    velocity_y=velocity_y+(-2*spin_velocity*velocity_z*math.cos(math.radians(30))-2*spin_velocity*velocity_x*math.sin(math.radians(30))-friction*velocity*velocity_y)*det_t
    velocity_z=velocity_z+(2*spin_velocity*velocity_y*math.cos(math.radians(30))-9.8-friction*velocity*velocity_z)*det_t
    velocity=(velocity_x**2+velocity_y**2+velocity_z**2)**(1/2)
else:
    lanch_x=(-z_array1[-1]/(z_array1[-2]-z_array1[-1]))*(x_array1[-2]-x_array1[-1])+x_array1[-1]
    lanch_y=(-z_array1[-1]/(z_array1[-2]-z_array1[-1]))*(y_array1[-2]-y_array1[-1])+y_array1[-1]
    print(t)
    print(lanch_x,lanch_y)
velocity=700
x_array2=[0]
y_array2=[0]
z_array2=[0]
angle_z2=45
angle_x2=20
spin_velocity=2*math.pi/(3600*24)
velocity_x=velocity*math.cos(math.radians(angle_z2))*math.cos(math.radians(angle_x2))
velocity_y=velocity*math.cos(math.radians(angle_z2))*math.sin(math.radians(angle_x2))
velocity_z=velocity*math.sin(math.radians(angle_z2))
det_t=0.2
z=0
x=0
y=0
t=0
friction_0=4*10**(-5)
while z>=0:
    t=t+det_t
    x=x+velocity_x*det_t
    y=y+velocity_y*det_t
    z=z+velocity_z*det_t
    x_array2.append(x)
    y_array2.append(y)
    z_array2.append(z)
    friction=friction_0*((1-y*6.5*10**(-3)/300)**2.5)
    velocity_x=velocity_x+(2*spin_velocity*velocity_y*math.sin(math.radians(30))-friction*velocity*velocity_x)*det_t
    velocity_y=velocity_y+(-2*spin_velocity*velocity_z*math.cos(math.radians(30))-2*spin_velocity*velocity_x*math.sin(math.radians(30))-friction*velocity*velocity_y)*det_t
    velocity_z=velocity_z+(2*spin_velocity*velocity_y*math.cos(math.radians(30))-9.8-friction*velocity*velocity_z)*det_t
    velocity=(velocity_x**2+velocity_y**2+velocity_z**2)**(1/2)
else:
    lanch_x=(-z_array2[-1]/(z_array2[-2]-z_array2[-1]))*(x_array2[-2]-x_array2[-1])+x_array2[-1]
    lanch_y=(-z_array2[-1]/(z_array2[-2]-z_array2[-1]))*(y_array2[-2]-y_array2[-1])+y_array2[-1]
    print(t)
    print(lanch_x,lanch_y)
velocity=700
x_array3=[0]
y_array3=[0]
z_array3=[0]
angle_z3=45
angle_x3=30
spin_velocity=2*math.pi/(3600*24)
velocity_x=velocity*math.cos(math.radians(angle_z3))*math.cos(math.radians(angle_x3))
velocity_y=velocity*math.cos(math.radians(angle_z3))*math.sin(math.radians(angle_x3))
velocity_z=velocity*math.sin(math.radians(angle_z3))
det_t=0.2
z=0
x=0
y=0
t=0
friction_0=4*10**(-5)
while z>=0:
    t=t+det_t
    x=x+velocity_x*det_t
    y=y+velocity_y*det_t
    z=z+velocity_z*det_t
    x_array3.append(x)
    y_array3.append(y)
    z_array3.append(z)
    friction=friction_0*((1-y*6.5*10**(-3)/300)**2.5)
    velocity_x=velocity_x+(2*spin_velocity*velocity_y*math.sin(math.radians(30))-friction*velocity*velocity_x)*det_t
    velocity_y=velocity_y+(-2*spin_velocity*velocity_z*math.cos(math.radians(30))-2*spin_velocity*velocity_x*math.sin(math.radians(30))-friction*velocity*velocity_y)*det_t
    velocity_z=velocity_z+(2*spin_velocity*velocity_y*math.cos(math.radians(30))-9.8-friction*velocity*velocity_z)*det_t
    velocity=(velocity_x**2+velocity_y**2+velocity_z**2)**(1/2)
else:
    lanch_x=(-z_array3[-1]/(z_array3[-2]-z_array3[-1]))*(x_array3[-2]-x_array3[-1])+x_array3[-1]
    lanch_y=(-z_array3[-1]/(z_array3[-2]-z_array3[-1]))*(y_array3[-2]-y_array3[-1])+y_array3[-1]
    print(t)
    print(lanch_x,lanch_y)
velocity=700
x_array4=[0]
y_array4=[0]
z_array4=[0]
angle_z4=45
angle_x4=40
spin_velocity=2*math.pi/(3600*24)
velocity_x=velocity*math.cos(math.radians(angle_z4))*math.cos(math.radians(angle_x4))
velocity_y=velocity*math.cos(math.radians(angle_z4))*math.sin(math.radians(angle_x4))
velocity_z=velocity*math.sin(math.radians(angle_z4))
det_t=0.2
z=0
x=0
y=0
t=0
friction_0=4*10**(-5)
while z>=0:
    t=t+det_t
    x=x+velocity_x*det_t
    y=y+velocity_y*det_t
    z=z+velocity_z*det_t
    x_array4.append(x)
    y_array4.append(y)
    z_array4.append(z)
    friction=friction_0*((1-y*6.5*10**(-3)/300)**2.5)
    velocity_x=velocity_x+(2*spin_velocity*velocity_y*math.sin(math.radians(30))-friction*velocity*velocity_x)*det_t
    velocity_y=velocity_y+(-2*spin_velocity*velocity_z*math.cos(math.radians(30))-2*spin_velocity*velocity_x*math.sin(math.radians(30))-friction*velocity*velocity_y)*det_t
    velocity_z=velocity_z+(2*spin_velocity*velocity_y*math.cos(math.radians(30))-9.8-friction*velocity*velocity_z)*det_t
    velocity=(velocity_x**2+velocity_y**2+velocity_z**2)**(1/2)
else:
    lanch_x=(-z_array4[-1]/(z_array4[-2]-z_array4[-1]))*(x_array4[-2]-x_array4[-1])+x_array4[-1]
    lanch_y=(-z_array4[-1]/(z_array4[-2]-z_array4[-1]))*(y_array4[-2]-y_array4[-1])+y_array4[-1]
    print(t)
    print(lanch_x,lanch_y)
    import mpl_toolkits.mplot3d
    import numpy as np  
    import matplotlib.pyplot as plt  
    ax=plt.subplot(111,projection='3d')  
    ax.plot(x_array0,y_array0,z_array0,label='0Â°')
    ax.plot(x_array1,y_array1,z_array1,label='10Â°')
    ax.plot(x_array2,y_array2,z_array2,label='20Â°')
    ax.plot(x_array3,y_array3,z_array3,label='30Â°')
    ax.plot(x_array4,y_array4,z_array4,label='40Â°')
    ax.legend()
    ax.set_xlabel("X(m)")  
    ax.set_ylabel("Y(m)")  
    ax.set_zlabel("Z(m)")  
    plt.show()  
```








