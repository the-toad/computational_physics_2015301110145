程序一
```
def baseball(velocity,angle):
    import math
    x0=0
    y0=1.5    
    x1=0
    y1=1.5
    velocity0=velocity
    velocity1=velocity
    array_x0=[0]
    array_y0=[1.5]
    array_x1=[0]
    array_y1=[1.5]
    spin_velocity=209
    velocity_x0=velocity0*math.cos(math.radians(angle))
    velocity_y0=velocity0*math.sin(math.radians(angle))
    velocity_x1=velocity0*math.cos(math.radians(angle))
    velocity_y1=velocity0*math.sin(math.radians(angle))
    det_t=0.01
    while y0 >=0:
        x0=velocity_x0*det_t+x0
        y0=velocity_y0*det_t+y0
        friction0=0.0039+0.0058/(1+math.exp((velocity0-35)/5))
        magnus=0.00041*spin_velocity*velocity_x0
        velocity_x0=(-friction0*velocity_x0*velocity0)*det_t+velocity_x0
        velocity_y0=(-9.8-friction0*velocity_y0*velocity0-magnus)*det_t+velocity_y0
        velocity0=(velocity_x0**2+velocity_y0**2)**(1/2)
        array_x0.append(x0)
        array_y0.append(y0)
    else:
        import numpy as np
        import pylab as pl
        lanch_x0=(-array_y0[-1]/(array_y0[-2]-array_y0[-1]))*(array_x0[-2]-array_x0[-1])+array_x0[-1]
        pl.plot(array_x0,array_y0,label=str(velocity)+'m/s')
        print(lanch_x0)
    while y1 >=0:
        x1=velocity_x1*det_t+x1
        y1=velocity_y1*det_t+y1
        friction1=0.0039+0.0058/(1+math.exp((velocity1-35)/5))
        velocity_x1=(-friction1*velocity_x1*velocity1)*det_t+velocity_x1
        velocity_y1=(-9.8-friction1*velocity_y1*velocity1)*det_t+velocity_y1
        velocity1=(velocity_x1**2+velocity_y1**2)**(1/2)
        array_x1.append(x1)
        array_y1.append(y1)
    else:
        import numpy as np
        import pylab as pl
        lanch_x1=(-array_y1[-1]/(array_y1[-2]-array_y1[-1]))*(array_x1[-2]-array_x1[-1])+array_x1[-1]
        pl.plot(array_x1,array_y1,'--',label=str(velocity)+'m/s')
        print(lanch_x1)
ini_velocity=30
for i in range(3):
    ini_velocity=ini_velocity+10
    baseball(ini_velocity,0)
import numpy as np
import pylab as pl
pl.title('the impace of magnus force')
pl.xlabel('x/m')
pl.ylabel('y/m')
pl.legend()
```
程序二
```
def baseball(velocity,angle):
    import math
    x0=0
    y0=1.5    
    x1=0
    y1=1.5
    velocity0=velocity
    velocity1=velocity
    array_x0=[0]
    array_y0=[1.5]
    array_x1=[0]
    array_y1=[1.5]
    spin_velocity=209
    velocity_x0=velocity0*math.cos(math.radians(angle))
    velocity_y0=velocity0*math.sin(math.radians(angle))
    velocity_x1=velocity0*math.cos(math.radians(angle))
    velocity_y1=velocity0*math.sin(math.radians(angle))
    det_t=0.01
    while y0 >=0:
        x0=velocity_x0*det_t+x0
        y0=velocity_y0*det_t+y0
        friction0=0.0039+0.0058/(1+math.exp((velocity0-35)/5))
        magnus=0.00041*spin_velocity*velocity_x0
        velocity_x0=(-friction0*velocity_x0*velocity0)*det_t+velocity_x0
        velocity_y0=(-9.8-friction0*velocity_y0*velocity0-magnus)*det_t+velocity_y0
        velocity0=(velocity_x0**2+velocity_y0**2)**(1/2)
        array_x0.append(x0)
        array_y0.append(y0)
    else:
        import numpy as np
        import pylab as pl
        lanch_x0=(-array_y0[-1]/(array_y0[-2]-array_y0[-1]))*(array_x0[-2]-array_x0[-1])+array_x0[-1]
        pl.plot(array_x0,array_y0,label=str(velocity)+'m/s'+ str(angle)+'°')
        print(lanch_x0)
    while y1 >=0:
        x1=velocity_x1*det_t+x1
        y1=velocity_y1*det_t+y1
        friction1=0.0039+0.0058/(1+math.exp((velocity1-35)/5))
        velocity_x1=(-friction1*velocity_x1*velocity1)*det_t+velocity_x1
        velocity_y1=(-9.8-friction1*velocity_y1*velocity1)*det_t+velocity_y1
        velocity1=(velocity_x1**2+velocity_y1**2)**(1/2)
        array_x1.append(x1)
        array_y1.append(y1)
    else:
        import numpy as np
        import pylab as pl
        lanch_x1=(-array_y1[-1]/(array_y1[-2]-array_y1[-1]))*(array_x1[-2]-array_x1[-1])+array_x1[-1]
        pl.plot(array_x1,array_y1,'--',label=str(velocity)+'m/s'+ str(angle)+'°')
        print(lanch_x1)
angle=0
for i in range(3):
    angle=angle+10
    baseball(50,angle)
import numpy as np
import pylab as pl
pl.title('the impace of magnus force')
pl.xlabel('x/m')
pl.ylabel('y/m')
pl.legend()```
